# Copyright 2012 ANSSI
# Distributed under the terms of the GNU General Public License v2

EAPI="3"
DESCRIPTION="Baselayout for a Clip devstation (LXC) and livecd (chroot)"
HOMEPAGE="https://www.ssi.gouv.fr"

GCC_PV="4.7.4"
GCC_PV_RM="4.9.3"
GCC_PV_AMD64="5.3.0"

LICENSE="GPL-2"
SLOT="0"
KEYWORDS="x86 arm amd64"
RDEPEND="
	!clip-layout/baselayout-devstation
	!clip-sdk-bootstrap? (
		!amd64? (
			~sys-devel/gcc-${GCC_PV}
			~sys-devel/gcc-${GCC_PV_RM}
			)
		amd64? ( ~sys-devel/gcc-${GCC_PV_AMD64} )
	)
	arm? ( app-emulation/qemu-bin )"
IUSE="clip-devstation +clip-dev-lxc clip-livecd clip-sdk-bootstrap"

_mknod() {
	local dev="$1"
	shift
	ebegin "Creating ${dev}"
	mknod "${D}${dev}" "$@"
	eend $?
}

src_install() {
	local config
	if use clip-devstation || use clip-sdk-bootstrap; then
		config="dev"
	elif use clip-livecd; then
		config="livecd"
	fi

	einfo "Installing CLIP $config on $ARCH"

	# Directories
	dodir /dev
	dodir /mnt/clip-src

	if use clip-devstation; then
		dodir /dev/pts
		dodir /dev/shm
	elif use clip-livecd; then
		dodir /clip1
		dodir /clip2
		dodir /mnt/usb
		dodir /opt/clip-int
		dodir /usr/src
	fi

	# Devices
	if use clip-devstation && use clip-dev-lxc || use clip-sdk-bootstrap; then
		_mknod /dev/null --mode=0666 c 1 3
		_mknod /dev/zero --mode=0666 c 1 5
		_mknod /dev/full --mode=0666 c 1 7
		_mknod /dev/random --mode=0666 c 1 8
		_mknod /dev/urandom --mode=0666 c 1 9
		_mknod /dev/tty --mode=0666 c 5 0
		for i in {1..12}; do
			_mknod "/dev/tty${i}" c 4 "${i}"
		done
		_mknod /dev/console c 5 1
		_mknod /dev/ptmx --mode=0666 c 5 2
		_mknod /dev/rtc c 254 0
		for i in {0..7}; do
			_mknod "/dev/loop${i}" b 7 "$i"
		done
		_mknod /dev/loop-control b 10 237

		dosym /proc/self/fd /dev/fd
		dosym /proc/self/fd/0 /dev/stdin
		dosym /proc/self/fd/1 /dev/stdout
		dosym /proc/self/fd/2 /dev/stderr
	fi

	# Portage
	if use clip-devstation || use clip-livecd || use clip-sdk-bootstrap; then
		insinto /etc
		newins "${FILESDIR}/make-${config}.conf" "make.conf"
		exeinto /usr/lib/portage/bin
		newexe "${FILESDIR}/clip-fetch" "clip-fetch"
	fi
	# manual eselect profile
	local clip_profile=""
	case "${ARCH}" in
		amd64)
			clip_profile="amd64"
			;;
		x86)
			clip_profile="x86"
			;;
		arm)
			clip_profile="armel"
			;;
		*)
			die "Unknown ARCH=${ARCH}"
	esac
	dosym "/opt/clip-int/portage-overlay-clip/profiles/clip-${config}/${clip_profile}" "/etc/make.profile"
	dosym "/opt/clip-int/portage" "/usr/portage"
}

pkg_preinst() {
	if use clip-dev-lxc; then
		if [[ -L /dev/ptmx ]]; then
			# Use a real device
			rm -f /dev/ptmx
		fi
	fi
}

_rcdel() {
	local srv="$1"
	if rc-update show -v | grep -qE "^ *${srv} \| *[^ ]+ *\$"; then
		rc-update del "$@"
	fi
}

pkg_postinst() {
	if use clip-devstation && use clip-dev-lxc; then
		# Set device perms
		local dev
		for dev in null zero full random urandom tty; do
			chmod 0666 "${ROOT}/dev/${dev}"
		done

		# Useless services for LXC
		_rcdel consolefont boot
		_rcdel devfs sysinit
		_rcdel fsck boot
		_rcdel hostname boot
		_rcdel hwclock boot
		_rcdel keymaps boot
		_rcdel localmount boot
		_rcdel modules boot
		_rcdel mount-ro shutdown
		_rcdel net.lo boot default
		_rcdel netmount default
		_rcdel procfs boot
		_rcdel root boot
		_rcdel swap boot
		_rcdel sysctl boot
		_rcdel udev-postmount default
		_rcdel udev sysinit
		_rcdel urandom boot
	fi

	# GCC
	if ! use clip-sdk-bootstrap; then
		local clip_gcc=""
		case "${ARCH}" in
			x86)
				clip_gcc="i686-pc-linux-gnu-${GCC_PV_RM}"
				;;
			amd64)
				clip_gcc="x86_64-pc-linux-gnu-${GCC_PV_AMD64}"
				;;
			arm)
				clip_gcc="armv7a-hardfloat-linux-gnueabi-${GCC_PV}"
				;;
			*)
				die "Unknown ARCH=${ARCH}"
		esac

		if [ "$(gcc-config -c)" != "${clip_gcc}" ]; then
			gcc-config "${clip_gcc}"
		fi
	fi

	# TODO: eselect for livecd and devstation?

	ewarn "You should run etc-update"
}
